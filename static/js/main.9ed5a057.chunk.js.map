{"version":3,"sources":["assets/audio/correct-answer.mp3","assets/audio/wrong-answer.mp3","assets/audio/button-sound.mp3","components/Home.js","components/quiz/QuizInstructions.js","components/quiz/Quiz.js","components/quiz/Summary.js","Config.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Home","id","Helmet","Container","fluid","Row","className","to","QuizInstructions","Quiz","displayQuestions","questions","currentQuestion","nextQuestion","previousQuestion","currentQuestionIndex","state","setState","numberOfQuestions","length","answer","title","loading","handleClick","e","target","innerHTML","document","getElementById","play","correctAnswer","wrongAnswer","alertQuit","Swal","fire","icon","showCancelButton","confirmButtonText","cancelButtonText","confirmButtonColor","cancelButtonColor","then","result","value","props","history","push","dismiss","DismissReason","cancel","alertTimeout","endGame","handleQuitButtonClick","playButtonSound","M","toast","html","classes","displayLength","prevState","correctAnswers","numberOfAnsweredQuestion","undefined","wrongAnswers","startTimer","countDownTime","Date","now","interval","setInterval","distance","minutes","Math","floor","seconds","clearInterval","time","playerStats","setTimeout","this","getQuestions","data","size","color","Fade","in","src","correctNotification","wrongNotification","buttonSound","Col","Icon","fontSize","content","xs","md","onClick","firstAnswer","secondAnswer","thirdAnswer","fourthAnswer","React","Component","Summary","score","numberOfAnswererQuestions","location","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Header","Footer","firestore","collection","get","item","docs","map","doc","App","basename","path","exact","component","render","Boolean","window","hostname","match","ReactDOM","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.9ed5a057.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/correct-answer.2b87b416.mp3\";","module.exports = __webpack_public_path__ + \"static/media/wrong-answer.3555354b.mp3\";","module.exports = __webpack_public_path__ + \"static/media/button-sound.dd7fb344.mp3\";","import React from 'react';\nimport Helmet from 'react-helmet';\nimport { Link } from 'react-router-dom';\nimport {Container, Row} from 'react-bootstrap';\n\nfunction Home(){\n    return (\n        <div id=\"home\">\n            <Helmet><title>Movie Quotes Quiz - Home page</title></Helmet>\n            <Container fluid>\n                <Row className=\"mx-2 mx-md-5 mb-5 d-flex justify-content-center\">\n                    <h1 className=\"text-center mx-2 mx-md-5 my-5 font-weight-light\">Movie Quotes Quiz will test how well you know famous quotes!</h1>\n                    <Link to=\"play/instruction\" className=\"btn-basic m-auto px-5\">Let's play</Link>\n                </Row>\n            </Container>\n        </div>\n    )\n}\n\nexport default Home;","import React from 'react';\nimport Helmet from 'react-helmet';\nimport { Link } from 'react-router-dom';\nimport {Container, Row} from 'react-bootstrap'\n\nfunction QuizInstructions(){\n    return (\n        <div id=\"instruction\">\n            <Helmet><title>Movie Quotes Quiz - Instruction</title></Helmet>\n            <Container fluid>\n                <Row className=\"mx-2 mx-md-5 mb-5 d-flex justify-content-center flex-column\">\n                    <h1 className=\"text-center mx-2 mx-md-5 my-5 font-weight-light\">How to play?</h1>\n                    <h2 className=\"text-center mb-5 font-weight-light\">This is a simple game, just choose one of four options!</h2>\n                    <Link to=\"quiz\" className=\"btn-basic m-auto px-5\">Start game</Link>\n                </Row>\n            </Container>\n        </div>\n    )\n}\n\nexport default QuizInstructions;","import React from 'react';\nimport Helmet from 'react-helmet';\nimport Icon from '@material-ui/core/Icon';\nimport M from 'materialize-css';\nimport correctNotification from '../../assets/audio/correct-answer.mp3';\nimport wrongNotification from '../../assets/audio/wrong-answer.mp3';\nimport buttonSound from '../../assets/audio/button-sound.mp3';\nimport Swal from 'sweetalert2';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { BarLoader } from 'react-spinners';\nimport { Fade } from '@material-ui/core';\n\nclass Quiz extends React.Component {\n\n    constructor(){\n        super();\n        this.state = { \n            questions: [],\n            currentQuestion: {},\n            nextQuestion: {},\n            previousQuestion: {},\n            answer: '',\n            numberOfQuestions: 0,\n            numberOfAnsweredQuestion: 0,\n            currentQuestionIndex: 0,\n            correctAnswers: 0,\n            wrongAnswers: 0,\n            time: {},\n            loading: true\n        }\n        this.interval = null;\n    }\n\n    displayQuestions = (questions, currentQuestion, nextQuestion, previousQuestion) => {\n        let {currentQuestionIndex} = this.state;\n        questions = this.state.questions;\n        currentQuestion = questions[currentQuestionIndex];\n        nextQuestion =  questions[currentQuestionIndex +1];\n        previousQuestion =  questions[currentQuestionIndex -1];\n        this.setState({\n            currentQuestion,\n            nextQuestion,\n            previousQuestion,\n            numberOfQuestions: questions.length,\n            answer: currentQuestion && currentQuestion.title,\n            loading: false\n        });\n    }\n\n    componentDidMount(){\n\n        this.props.getQuestions()\n            .then((data) => this.setState({questions: data}))\n            .then(() => this.displayQuestions(this.state.questions, this.state.currentQuestion, this.state.nextQuestion, this.state.previousQuestion));\n        this.startTimer();\n    }\n\n    componentWillUnmount(){\n        clearInterval(this.interval);\n    }\n   \n    handleClick = (e) => {\n       if(e.target.innerHTML === this.state.answer) {\n            document.getElementById('correct-sound').play();\n            this.correctAnswer();\n       } else {\n            document.getElementById('wrong-sound').play();\n            this.wrongAnswer();\n       }\n    }\n\n    alertQuit = () => {\n        Swal.fire({\n            title: 'Are you sure to quit game?',\n            icon: 'question',\n            showCancelButton: true,\n            confirmButtonText: 'Yes, I want to quit.',\n            cancelButtonText: 'No, I wanna play!',\n            confirmButtonColor: '#ec3a3a',\n            cancelButtonColor: '#2b89ea'\n          }).then((result) => {\n            if (result.value) {\n              this.props.history.push('/');\n            } else if (result.dismiss === Swal.DismissReason.cancel) {\n              Swal.fire(\n                'Good decision',\n                'Have fun :)',\n                'success'\n              )\n            }\n        });\n    }\n\n    alertTimeout = () => {\n        Swal.fire({\n            title: 'The time is over',\n            icon: 'error',\n            showCancelButton: false,\n            confirmButtonText: 'Go to summary'\n          }).then((result) => {\n            if (result.value) {\n                this.endGame();\n            } \n        });\n    }\n\n    handleQuitButtonClick = () => {\n        this.playButtonSound();\n        this.alertQuit();\n    } \n\n    playButtonSound = () => {\n        document.getElementById('button-sound').play();\n    }\n\n    correctAnswer = () => {\n        M.toast({html: 'Correct!', classes: 'btn-basic btn-small', displayLength: 1500});\n        this.setState(prevState => ({\n            correctAnswers: prevState.correctAnswers + 1,\n            numberOfAnsweredQuestion: prevState.numberOfAnsweredQuestion + 1,\n            currentQuestionIndex: prevState.currentQuestionIndex + 1\n        }), () => {\n            if(this.state.nextQuestion === undefined){\n                this.endGame();\n            } else {\n                this.displayQuestions(this.state.questions, this.state.currentQuestion, this.state.nextQuestion, this.state.previousQuestion);\n            }\n        });\n    }\n\n    wrongAnswer = () => {\n        M.toast({html: 'Wrong :(', classes: 'btn-basic btn-small btn-red', displayLength: 1500});\n        this.setState(prevState => ({\n            wrongAnswers: prevState.wrongAnswers + 1,\n            numberOfAnsweredQuestion: prevState.numberOfAnsweredQuestion + 1,\n            currentQuestionIndex: prevState.currentQuestionIndex + 1\n        }), () => {\n            if(this.state.nextQuestion === undefined){\n                this.endGame();\n                this.setState(prevState => ({\n                    currentQuestionIndex: prevState.currentQuestionIndex - 1\n                }));\n            } else {\n            this.displayQuestions(this.state.questions, this.state.currentQuestion, this.state.nextQuestion, this.state.previousQuestion);\n            }\n        });\n    }\n\n    startTimer = () => {\n        const countDownTime = Date.now() + 180000;\n        this.interval = setInterval(() => {\n            const now = new Date();\n            const distance = countDownTime - now;\n            const minutes =  Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\n            const seconds =  Math.floor((distance % (1000 * 60)) / 1000);\n\n            if (distance < 0) {\n                clearInterval(this.interval);\n                this.setState({\n                    time: {\n                        minutes: 0,\n                        seconds: 0\n                    }\n                }, () => {\n                    this.alertTimeout();\n                })\n            } else {\n                this.setState({\n                    time: {\n                        minutes,\n                        seconds\n                    }\n                });\n            }\n        }, 1000)\n    }\n\n    endGame = () => {\n        const playerStats = {\n            numberOfQuestions: this.state.numberOfQuestions,\n            numberOfAnsweredQuestion: this.state.numberOfAnsweredQuestion,\n            correctAnswer: this.state.correctAnswers,\n            wrongAnswer: this.state.wrongAnswers\n        }\n        setTimeout(() => {\n            this.props.history.push('/play/summary', playerStats);\n        }, 1000)\n    }\n\n    render() {\n        const {currentQuestion, numberOfQuestions, currentQuestionIndex, time, loading} = this.state; \n        if(loading) {\n            return (\n                <Row className=\"d-flex align-items-center justify-content-center h-100\">\n                    <BarLoader size={120} color=\"#1db954\" loading={loading}/>\n                </Row>\n            )\n        } else {\n            return (\n                <Fade in={true}>\n                    <div id=\"quiz\">\n                        <Helmet><title>Movie Quotes Quiz - Quiz</title></Helmet>\n                        <audio id=\"correct-sound\" src={correctNotification}></audio>\n                        <audio id=\"wrong-sound\" src={wrongNotification}></audio>\n                        <audio id=\"button-sound\" src={buttonSound}></audio>\n                        <Container fluid>\n                            <Row className=\"mx-5\">\n                                <Col>\n                                    <p>{currentQuestionIndex + 1}/{numberOfQuestions}</p>\n                                </Col>\n                                <Col>\n                                    <p className=\"d-flex justify-content-end align-items-center\"><Icon fontSize=\"small\" className=\"mr-2\">timer</Icon>{time.minutes}:{time.seconds}</p>\n                                </Col>\n                            </Row>\n                            <h1 className=\"text-center mt-1 mt-md-4 mx-2 mx-md-5 font-weight-light\">{currentQuestion.content}</h1>\n                            <Row>\n                                <Col xs={12} md={6} className=\"d-flex justify-content-center px-5\">\n                                    <button onClick={this.handleClick} className=\"btn-basic w-100\">{currentQuestion.firstAnswer}</button>\n                                </Col>\n                                <Col xs={12} md={6} className=\"d-flex justify-content-center px-5\">\n                                    <button onClick={this.handleClick} className=\"btn-basic w-100\">{currentQuestion.secondAnswer}</button>\n                                </Col>\n                                <Col xs={12} md={6} className=\"d-flex justify-content-center px-5\">\n                                    <button onClick={this.handleClick} className=\"btn-basic w-100\">{currentQuestion.thirdAnswer}</button>\n                                </Col>\n                                <Col xs={12} md={6} className=\"d-flex justify-content-center px-5\">\n                                    <button onClick={this.handleClick} className=\"btn-basic w-100\">{currentQuestion.fourthAnswer}</button>\n                                </Col>\n                            </Row>\n                            <Row className=\"ml-4 my-3\">\n                                <button className=\"btn-basic btn-red btn-small\" id=\"quit-button\" onClick={this.handleQuitButtonClick}>Quit</button>\n                            </Row>\n                        </Container>\n                    </div>\n                </Fade>\n            )\n        }\n    }\n}\n\nexport default Quiz;","import React from 'react';\nimport Helmet from 'react-helmet';\nimport { Link } from 'react-router-dom';\nimport {Container, Row, Col} from 'react-bootstrap'\n\nclass Summary extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            score: 0,\n            numberOfQuestions: 0,\n            numberOfAnswererQuestions: 0,\n            correctAnswers: 0,\n            wrongAnswers: 0\n        }\n    }\n\n    componentDidMount(){\n        const { state } = this.props.location;\n        this.setState({\n            numberOfQuestions: state.numberOfQuestions,\n            numberOfAnsweredQuestion: state.numberOfAnsweredQuestion,\n            correctAnswer: state.correctAnswer,\n            wrongAnswer: state.wrongAnswer\n        });\n    }\n\n    render() {\n        return (\n            <div id=\"summary\">\n                <Helmet><title>Movie Quotes Quiz - Summary</title></Helmet>\n                <Container fluid>\n                    <Row className=\"mx-2 mx-md-5 mb-5 d-flex justify-content-center flex-column\">\n                        <h1 className=\"text-center mx-2 mx-md-5 my-5 font-weight-light\">You were right in <strong>{Math.floor((this.state.correctAnswer / this.state.numberOfQuestions) * 100) } %</strong> !</h1>\n                        <p className=\"summary-info text-center\">Correct answers: <strong>{this.state.correctAnswer}</strong></p>\n                        <p className=\"summary-info text-center\">Wrong answers: <strong>{this.state.wrongAnswer}</strong></p>\n                        <p className=\"summary-info text-center\">Number of answered questions: <strong>{this.state.numberOfAnsweredQuestion}</strong></p>\n                        <p className=\"summary-info text-center\">Number of questions: <strong>{this.state.numberOfQuestions}</strong></p>\n                    </Row>\n                    <Row className=\"mx-2 mx-md-5 mb-5 d-flex\">\n                        <Col xs={12} md={6} className=\"mb-3 mb-md-5 justify-content-center d-flex\">\n                            <Link to=\"/\" className=\"btn-basic m-auto px-5\">Back to home</Link>\n                        </Col>\n                        <Col xs={12} md={6} className=\"mb-3 mb-md-5 justify-content-center d-flex\">\n                            <Link to=\"quiz\" className=\"btn-basic m-auto px-5\">Play again!</Link>\n                        </Col>\n                    </Row>\n                </Container>\n            </div>\n        )\n    }\n}\n\nexport default Summary;","import firebase from 'firebase/app';\nimport 'firebase/firestore';\n\nconst db_config = {\n  apiKey: process.env.REACT_APP_FIREBASE_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_DOMAIN,\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_SENDER_ID,\n  appId: process.env.REACT_APP_MESSAGING_APP_ID,\n  measurementId: process.env.REACT_APP_MEASUREMENT_APP_ID\n}\n\nexport default firebase.initializeApp(db_config);","import React from 'react';\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\nimport Icon from '@material-ui/core/Icon';\nimport Home from './components/Home';\nimport QuizInstructions from './components/quiz/QuizInstructions'\nimport Quiz from './components/quiz/Quiz';\nimport Summary from './components/quiz/Summary';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport firebase from './Config';\n\nfunction Header(){\n  return (\n    <div>\n      <div className=\"logo\">\n        <Icon fontSize=\"large\">movie</Icon>\n        <strong>Movie Quotes Quiz</strong>  \n      </div>\n    </div>\n  )\n}\n\nfunction Footer() {\n  return (\n    <div id=\"footer\">\n      <p>Designed & created by Karolina Guzik</p>\n    </div>\n  )\n}\n\nfunction getQuestions() {\n  const ref = firebase.firestore().collection('quotes');\n  return ref.get().then(item => {\n    return item.docs.map(doc => doc.data());\n  });\n}\n\nfunction App() {\n  return (\n    <>\n      <Header/>\n      <Router basename='/movie-quotes-quiz'>\n        <Route path=\"/\" exact component={Home}/>\n        <Route path=\"/play/instruction\" exact component={QuizInstructions}/>\n        <Route path=\"/play/quiz\" exact render={(props) => <Quiz getQuestions={getQuestions} {...props} />}/>\n        <Route path=\"/play/summary\" exact component={Summary}/>\n      </Router>\n      <Footer/>\n    </>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './styles/styles.scss';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}